:root {
    --accent: hsl(172, 67%, 45%);
    --background-dark: hsl(183, 100%, 15%);
    --text-dark: hsl(186, 14%, 43%);
    --background-medium: hsl(184, 14%, 56%);
    --background-light-200: hsl(185, 41%, 84%);
    --background-light-100: hsl(0, 0%, 100%);
    --text-light: hsl(189, 41%, 97%);
}

/* reset */
*,
*::before,
*::after {
  box-sizing: border-box;
}

body,
h1,
h2,
h3,
p, 
section,
article,
input {
  margin: 0;
  padding: 0;
}

img {
  max-width: 100%;
  display: block;
}

button {
  font-family: inherit;
}

body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

html:focus-within {
  scroll-behavior: smooth;
}

a:not([class]) {
  text-decoration-skip-ink: auto;
}

@media (prefers-reduced-motion: reduce) {
  html:focus-within {
   scroll-behavior: auto;
  }
  
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
/* end reset */

body {
    font-family: "Space Mono", serif;
    font-weight: 700;
    font-size: 24px;
    background-color: var(--background-light-200);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 2em;
}

main {
    display: grid;
    grid-template-columns: 1fr 1fr;
    column-gap: 1.2em;
    background-color: white;
    padding: 1em;
    border-radius: 1em;
}

/* left side */
.input {
    display: flex;
    flex-direction: column;
    gap: 1.2em;
    justify-content: space-around;
    margin: 0.3em 0;
}

h2 {
    font-size: 0.45em;
    letter-spacing: 1px;
    color: var(--text-dark);
}

.tip h2 {
    margin-bottom: 1em;
}

.button-wrapper {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 0.4em;
}

.tip-button {
    background-color: var(--background-dark);
    color: var(--text-light);
    border: transparent;
    font-size: 0.7em;
    letter-spacing: 1px;
    padding: 0.3em 1.4em;
    border-radius: 0.2em;
}

input {
    color: var(--background-dark);
    text-align: right;
}

input.tip {
    width: 30%;
    display: inline;
    float: right;
    background-color: var(--text-light);
    border: transparent;
    outline: transparent;
    padding: 0.25em 0.5em;
    font-size: 0.7em;
    font-weight: inherit;
    font-family: inherit;
    margin-top: -2.08em;
    border-radius: 0.2em;
}

input.tip::placeholder {
    color: var(--text-dark);
    opacity: 1;
    text-align: center;
}

input.tip::-ms-input-placeholder { /* edge */
    color: var(--text-dark);
    text-align: center;
}

input.bill, input.num-people {
    width: 100%;
    font-size: 0.8em;
    font-weight: inherit;
    font-family: inherit;
    padding: 0.1em 0.8em;
    background-color: var(--text-light);
    border: 2px solid transparent;
    outline: transparent;
    border-radius: 0.2em;
}

input.bill::placeholder, input.num-people::placeholder {
    text-align: right;
    color: var(--background-medium); 
    opacity: 1;
}

input.bill::-ms-input-placeholder, input.num-people::-ms-input-placeholder { /* edge */
    text-align: right;
    color: var(--text-dark); 
}

input.bill {
    background-image: url(./images/icon-dollar.svg);
    background-repeat: no-repeat;
    background-position: 5% 50%;
}

input.num-people {
    background-image: url(./images/icon-person.svg);
    background-repeat: no-repeat;
    background-position: 5% 50%;
}

.num-people-heading-wrapper {
    display: flex;
    justify-content: space-between;
    align-items: flex-end;
}

.warning {
    color: salmon;
    font-size: 0.45em;
    letter-spacing: 1px;
    display: none;
}

.warning.on {
    display: inline;
}

/* right side */ 
.output {
    background-color: var(--background-dark);
    border-radius: 0.5em;
    padding: 1.1em;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

.output-group {
    display: flex;
    flex-direction: column;
    gap: 0.5em;
}

p {
    color: var(--accent);
    font-size: 1.3em;
}

.line {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.line > h2 > span {
    font-size: 0.9em;
    display: block;
    opacity: 0.5;
}

.line > h2 {
    color: var(--text-light);;
}

section.output button { /*reset button */
    border: transparent;
    border-radius: 0.3em;
    background-color: var(--accent);
    padding: 0.5em 0;
    text-transform: uppercase;
    letter-spacing: 1px;
    font-size: 0.6em;
    opacity: 0.3; /* when no information added */ 
    width: 100%;
}

section.output > button.active { /* add active class when any info is added */
    opacity: 1;
}

/* active states */ 
section.output > button.active:hover,  section.output > button.active:focus { /* only when reset button is active do we have hover effect */
    cursor: pointer;
    opacity: 1;
    background-color: hsl(172, 67%, 80%);
}

.tip-button:hover, .tip-button:focus {
    cursor: pointer;
    background-color: hsl(172, 67%, 80%);
    color: var(--background-dark);
}

input.bill:hover, input.bill:focus {
    cursor: pointer;
}

input.bill.valid, input.num-people.valid, input.tip.valid { /*temp */
    border: 2px solid var(--accent);
}

input.bill.invalid, input.num-people.invalid, input.tip.invalid {
    border: 2px solid salmon;
}

/* selected, input entered states */
section.output > button.active {
    opacity: 1;
    background-color: var(--accent);
}

.tip-button.selected {
    background-color: var(--accent);
    color: var(--background-dark);
}

/* mobile */
@media only screen and (max-width: 620px) {
    main {
        display: grid;
        grid-template-columns: 1fr;
        width: 100%;
        row-gap: 1em;
    }

    header {
        margin-top: 2em;
    }

    .button-wrapper {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 0.4em;
    }

    input.tip {
        width: 49%;
    }
    /* need gap reset button and output display */
    .output {
        gap: 1em;
    }
}

.attribution { 
    font-size: 11px; 
    text-align: center; 
}
.attribution a { 
    color: hsl(228, 45%, 44%);
}